{"ast":null,"code":"import _classCallCheck from \"/home/surya/coding/fruit-mania/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/surya/coding/fruit-mania/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/surya/coding/fruit-mania/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/surya/coding/fruit-mania/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/surya/coding/fruit-mania/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/surya/coding/fruit-mania/src/components/ContactForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Row, Col, Icon, Input, Button } from 'antd';\nvar FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(function (field) {\n    return fieldsError[field];\n  });\n}\n\nvar HorizontalLoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalLoginForm, _React$Component);\n\n  function HorizontalLoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HorizontalLoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HorizontalLoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HorizontalLoginForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // To disabled submit button at the beginning.\n      this.props.form.validateFields();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched; // Only show error after a field is touched.\n\n      var addressError = isFieldTouched('address') && getFieldError('address');\n      var nameError = isFieldTouched('name') && getFieldError('name');\n      var emailError = isFieldTouched('email') && getFieldError('email');\n      var mobileError = isFieldTouched('mobile') && getFieldError('mobile');\n      var pincodeError = isFieldTouched('pincode') && getFieldError('pincode');\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"contact-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: 32,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        xs: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        validateStatus: nameError ? 'error' : '',\n        help: nameError || '',\n        className: \"fm-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: 'Please input your Name'\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        validateStatus: emailError ? 'error' : '',\n        help: emailError || '',\n        className: \"fm-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          required: true,\n          message: 'Please input your email'\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        validateStatus: mobileError ? 'error' : '',\n        help: mobileError || '',\n        className: \"fm-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, getFieldDecorator('mobile', {\n        rules: [{\n          required: true,\n          message: 'Please input your mobile Number'\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"Mobile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        validateStatus: pincodeError ? 'error' : '',\n        help: pincodeError || '',\n        className: \"fm-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, getFieldDecorator('pincode', {\n        rules: [{\n          required: true,\n          message: 'Please input your Pincode'\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"Pincode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        sm: 12,\n        xs: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        validateStatus: addressError ? 'error' : '',\n        help: addressError || '',\n        className: \"input-address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, getFieldDecorator('address', {\n        rules: [{\n          required: true,\n          message: 'Please input your Address'\n        }]\n      })(React.createElement(Input.TextArea, {\n        placeholder: \"Enter your address Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: hasErrors(getFieldsError()),\n        className: \"save-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"SEND\")));\n    }\n  }]);\n\n  return HorizontalLoginForm;\n}(React.Component);\n\nvar ContactForm = Form.create()(HorizontalLoginForm);\nexport default ContactForm;","map":{"version":3,"sources":["/home/surya/coding/fruit-mania/src/components/ContactForm.js"],"names":["React","Component","Form","Row","Col","Icon","Input","Button","FormItem","Item","hasErrors","fieldsError","Object","keys","some","field","HorizontalLoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","addressError","nameError","emailError","mobileError","pincodeError","rules","required","message","ContactForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Form, Row, Col, Icon, Input, Button } from 'antd';\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass HorizontalLoginForm extends React.Component {\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\n\n    // Only show error after a field is touched.\n    const addressError = isFieldTouched('address') && getFieldError('address');\n    const nameError = isFieldTouched('name') && getFieldError('name');\n    const emailError = isFieldTouched('email') && getFieldError('email');\n    const mobileError = isFieldTouched('mobile') && getFieldError('mobile');\n    const pincodeError = isFieldTouched('pincode') && getFieldError('pincode');\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"contact-form\">\n        <Row gutter={32}>\n          <Col sm={12} xs={24}>\n            <FormItem\n              validateStatus={nameError ? 'error' : ''}\n              help={nameError || ''}\n              className=\"fm-input\"\n            >\n              {getFieldDecorator('name', {\n                rules: [{ required: true, message: 'Please input your Name' }]\n              })(<Input placeholder=\"Name\" />)}\n            </FormItem>\n            <FormItem\n              validateStatus={emailError ? 'error' : ''}\n              help={emailError || ''}\n              className=\"fm-input\"\n            >\n              {getFieldDecorator('email', {\n                rules: [{ required: true, message: 'Please input your email' }]\n              })(<Input placeholder=\"Email\" />)}\n            </FormItem>\n            <FormItem\n              validateStatus={mobileError ? 'error' : ''}\n              help={mobileError || ''}\n              className=\"fm-input\"\n            >\n              {getFieldDecorator('mobile', {\n                rules: [{ required: true, message: 'Please input your mobile Number' }]\n              })(<Input placeholder=\"Mobile\" />)}\n            </FormItem>\n            <FormItem\n              validateStatus={pincodeError ? 'error' : ''}\n              help={pincodeError || ''}\n              className=\"fm-input\"\n            >\n              {getFieldDecorator('pincode', {\n                rules: [{ required: true, message: 'Please input your Pincode' }]\n              })(<Input placeholder=\"Pincode\" />)}\n            </FormItem>\n          </Col>\n          <Col sm={12} xs={24}>\n            <FormItem\n              validateStatus={addressError ? 'error' : ''}\n              help={addressError || ''}\n              className=\"input-address\"\n            >\n              {getFieldDecorator('address', {\n                rules: [{ required: true, message: 'Please input your Address' }]\n              })(<Input.TextArea placeholder=\"Enter your address Address\"  />)}\n            </FormItem>\n          </Col>\n        </Row>\n\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={hasErrors(getFieldsError())}\n            className=\"save-btn\"\n          >\n            SEND\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst ContactForm = Form.create()(HorizontalLoginForm);\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}